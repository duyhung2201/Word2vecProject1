package com.medallia.word2vec.test0;import com.medallia.word2vec.ReadFileXml;import org.w3c.dom.Document;import java.util.ArrayList;import java.util.List;public class FileReplace {    List<String> lines = new ArrayList<String>();    String line = null;    String[] regex = {"<br>","<br />","(?i)he's","(?i)she's","(?i)i'm","(?i)it's","(?i)you're","(?i)we're",            "(?i)they're","(?i)wasn't","(?i)weren't","(?i)don't","(?i)doesn't","(?i)didn't","(?i)isn't",            "(?i)aren't", "(?i)'ve","(?i)haven't","(?i)hasn't","(?i)couldn't","(?i)can't","(?i)wouldn't",            "(?i)hadn't","(?i)shan't", "(?i)mustn't","(?i)shouldn't","(?i)i'll","(?i)he'll",            "(?i)she'll","(?i)it'll","(?i)they'll","(?i)we'll", "(?i)you'll","(?i)let's"};    String[] strReplace = {"","","he is","she is","i am","it is","you are","we are","they are","was not",            "were not", "do not","does not","did not","is not","are not","have","have not","has not",            "could not","can not","would not", "had not","shall not","must not","should not","i will",            "he will","she will","it will","they will","we will", "you will","let us"};    public String replaceS(String s) {        for (int i = 0; i < regex.length; i++)            s = s.replaceAll(regex[i], strReplace[i]);        return s;    }    public void  doIt() {        try {            Document doc = ReadFileXml.readFileXml("pure_manner.xml");////            while ((element = doc.) != null) {////               }//               lines.add(line);//            fr.close();//            br.close();////            for(String s : lines)//                out.write(s);////            fw.close();//            out.flush();//            out.close();//        } catch (IOException e) {//            e.printStackTrace();        } catch (Exception ex) {            ex.printStackTrace();        }    }    public static void main(String args[]) {        FileReplace fr = new FileReplace();        fr.doIt();//        try {//            TransformerFactory transformerFactory = TransformerFactory.newInstance();//            Transformer transformer = transformerFactory.newTransformer();//            DOMSource source = new DOMSource(ReadFileXml.readFileXml("manner.xml"));//            StreamResult result = new StreamResult(new File("manner.xml"));//            transformer.transform(source, result);//        }//        catch (Exception e){//            System.out.println(e);//        }    }}