package com.medallia.word2vec.test0;import java.io.File;import javax.xml.parsers.DocumentBuilder;import javax.xml.parsers.DocumentBuilderFactory;import org.w3c.dom.Document;import org.w3c.dom.Element;import org.w3c.dom.Node;import org.w3c.dom.NodeList;class ReadFileXml { //doc file xml    public static Document readFileXml(String fileXml){        Document document = null;        File file = new File(fileXml);        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();        DocumentBuilder documentBuilder;        try {            documentBuilder = documentBuilderFactory.newDocumentBuilder();            document = documentBuilder.parse(file);        } catch (Exception e) {            e.printStackTrace();        }        return document;    }}public class XmlDemo {    boolean checkValidDouble(String s){        try{            Double.parseDouble(s);            return true;        }        catch (NumberFormatException e) {            return false;        }    }    public static void main(String[] args) {        XmlDemo a = new XmlDemo();        Document doc = ReadFileXml.readFileXml("edited_manner.xml");        NodeList nList = doc.getElementsByTagName("document");        for (int temp = 0; temp < 1; temp++) {            Node nNode = nList.item(temp);            System.out.println("\nCurrent Element :" + nNode.getNodeName());            if (nNode.getNodeType() == Node.ELEMENT_NODE) {                Element eElement = (Element) nNode;                System.out.println("Document type : " + eElement.getAttribute("type"));                String[] arr = eElement.getElementsByTagName("subject").item(0).getTextContent().split("([^\'a-zA-z0-9\\s]\\s+)|\\s+");                for(String out: arr)                         System.out.println(out);            }        }    }}